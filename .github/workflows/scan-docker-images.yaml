name: SAST/DAST scans
on:
  schedule:
    - cron: 0 4 * * 1
  workflow_dispatch:
permissions:
  contents: read

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-push.outputs.image }}
    permissions:
      contents: write # dep-submission
      id-token: write # nais docker-build-push
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # ratchet:actions/checkout@v4
      - name: Setup Node 20
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # ratchet:actions/setup-node@v2
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'
      - name: Yarn install and build client
        working-directory: web
        run: yarn install && yarn build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Yarn install and build server
        working-directory: web/server
        run: yarn install && yarn build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - uses: nais/docker-build-push@5246e4705d79945a0ec28eb9bd3638dd534fee46 # ratchet:nais/docker-build-push@v0
        id: docker-push
        with:
          team: security-champion-admin
          push_image: true
          pull: true
          docker_context: web/
          dockerfile: web/Dockerfile
          image_suffix: frontend
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
  build-backend:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-push.outputs.image }}
    permissions:
      contents: write # dep-submission
      id-token: write # nais docker-build-push
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # ratchet:actions/checkout@v4
      - uses: actions/setup-java@b36c23c0d998641eff861008f374ee103c25ac73 # ratchet:actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
          cache: gradle
      - name: build shadowjar
        run: ./gradlew shadowjar
        working-directory: ./backend/
      - uses: nais/docker-build-push@5246e4705d79945a0ec28eb9bd3638dd534fee46 # ratchet:nais/docker-build-push@v0
        id: docker-push
        with:
          team: security-champion-admin
          push_image: true
          pull: true
          docker_context: backend/
          dockerfile: backend/Dockerfile
          image_suffix: backend
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
  zap-scan-frontend:
    runs-on: ubuntu-latest
    needs: [build-frontend]
    permissions:
      contents: write # to write sarif
      id-token: write # for nais/login
    env:
      APP_PORT: 8080
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # ratchet:actions/checkout@v4
      - uses: nais/login@4ce7445c84f09114e481a1d2c164f563e9e2ba8e # ratchet:nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: security-champion-admin
      - name: Run frontend
        run: docker run --name app -d -p ${{env.APP_PORT}}:${{env.APP_PORT}} ${{ needs.build-frontend.outputs.image }}
      - name: Zap Setup
        run: | 
          echo "APP_URL=http://$(docker inspect app | grep IPAddress | tail -1 | awk '{print $2}' | tr -d '\",\n'):${{env.APP_PORT}}" >> $GITHUB_ENV
          mkdir zap
          chmod 0777 zap
      - name: ZAP Scan
        run: |
            docker run -v $(pwd)/zap:/zap/wrk/:rw \
            -t \
            softwaresecurityproject/zap-stable \
            zap-full-scan.py \
            -t ${{ env.APP_URL }} \
            -r report_web.html \
            -a \
            -s \
            -I \
            -j
      - name: Upload scan report
        uses: actions/upload-artifact@604373da6381bf24206979c74d06a550515601b9 # ratchet:actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: zap-report_frontend
          path: zap/report_web.html
  trivy-scan-backend:
    runs-on: ubuntu-latest
    needs: [build-backend]
    permissions:
      contents: write # to write sarif
      security-events: write # push sarif to github security
      id-token: write # for nais/login
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # ratchet:actions/checkout@v4
      - uses: nais/login@4ce7445c84f09114e481a1d2c164f563e9e2ba8e # ratchet:nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: security-champion-admin
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@a20de5420d57c4102486cdd9578b45609c99d7eb # ratchet:aquasecurity/trivy-action@master
        with:
          image-ref: '${{ needs.build-backend.outputs.image }}'
          format: 'sarif'
          output: 'trivy.sarif'
          severity: 'MEDIUM,HIGH,CRITICAL'
          limit-severities-for-sarif: true
      - name: Upload results to GitHub Security
        uses: github/codeql-action/upload-sarif@c36620d31ac7c881962c3d9dd939c40ec9434f2b # ratchet:github/codeql-action/upload-sarif@v2
        if: ${{ always() }}
        with:
          sarif_file: 'trivy.sarif'
  trivy-scan-frontend:
    runs-on: ubuntu-latest
    needs: [build-frontend]
    permissions:
      contents: write # to write sarif
      security-events: write # push sarif to github security
      id-token: write # for nais/login
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # ratchet:actions/checkout@v4
      - uses: nais/login@4ce7445c84f09114e481a1d2c164f563e9e2ba8e # ratchet:nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: security-champion-admin
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@a20de5420d57c4102486cdd9578b45609c99d7eb # ratchet:aquasecurity/trivy-action@master
        with:
          image-ref: '${{ needs.build-frontend.outputs.image }}'
          format: 'sarif'
          output: 'trivy.sarif'
          severity: 'MEDIUM,HIGH,CRITICAL'
          limit-severities-for-sarif: true
      - name: Upload results to GitHub Security
        uses: github/codeql-action/upload-sarif@c36620d31ac7c881962c3d9dd939c40ec9434f2b # ratchet:github/codeql-action/upload-sarif@v2
        if: ${{ always() }}
        with:
          sarif_file: 'trivy.sarif'
