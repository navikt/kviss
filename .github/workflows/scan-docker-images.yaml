name: SAST/DAST scans
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
jobs:
  build-frontend:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-push.outputs.image }}
    permissions:
      contents: write # dep-submission
      id-token: write # nais docker-build-push
    steps:
      - uses: actions/checkout@8410ad0602e1e429cee44a835ae9f77f654a6694 # ratchet:actions/checkout@v4
      - name: Setup Node 20
        uses: actions/setup-node@25b062c917b0c75f8b47d8469aff6c94ffd89abb # ratchet:actions/setup-node@v2
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'
#      - name: Yarn install and build client
#        working-directory: web
#        run: yarn install && yarn build
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
#      - name: Yarn install and build server
#        working-directory: web/server
#        run: yarn install && yarn build
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
#      - uses: nais/docker-build-push@3e3dd59e778ead7ba199dbfcde40350a178a2226 # ratchet:nais/docker-build-push@v0
#        id: docker-push
#        with:
#          team: security-champion-admin
#          push_image: true
#          pull: true
#          docker_context: web/
#          dockerfile: web/Dockerfile
#          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
#          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
  build-backend:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-push.outputs.image }}
    permissions:
      contents: write # dep-submission
      id-token: write # nais docker-build-push
    steps:
      - uses: actions/checkout@8410ad0602e1e429cee44a835ae9f77f654a6694 # ratchet:actions/checkout@v4
      - uses: actions/setup-java@16ef37f8dd292a31055a9ee0d26fa0a4efab58de # ratchet:actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
          cache: gradle
#      - name: build shadowjar
#        run: ./gradlew shadowjar
#        working-directory: ./backend/
#      - uses: nais/docker-build-push@3e3dd59e778ead7ba199dbfcde40350a178a2226 # ratchet:nais/docker-build-push@v0
#        id: docker-push
#        with:
#          team: security-champion-admin
#          push_image: true
#          pull: true
#          docker_context: backend/
#          dockerfile: backend/Dockerfile
#          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
#          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
  run-zap-scan:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    permissions:
      contents: write # to write sarif
      id-token: write # for nais/login
    steps:
      - uses: actions/checkout@8410ad0602e1e429cee44a835ae9f77f654a6694 # ratchet:actions/checkout@v4
      - uses: nais/login@4ce7445c84f09114e481a1d2c164f563e9e2ba8e # ratchet:nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: security-champion-admin
      - name: Setup docker network
        run: docker network create zap
      - name: Run frontend
        run: docker run --network zap --name frontend -d -p 3000:3000 europe-north1-docker.pkg.dev/nais-management-233d/security-champion-admin/kviss:2024.04.16-12.33-6b265de #${{ needs.build-frontend.outputs.image }}
      - name: Zap Setup
        run: | 
          echo "FRONTEND_URL=http://$(docker inspect frontend | grep IPAddress | tail -1 | awk '{print $2}' | tr -d '\",\n'):3000" >> $GITHUB_ENV
          mkdir zap
          chmod 0777 zap
      - name: ZAP Scan
        run: |
            whoami
            ls -l
            pwd
            docker run -v $(pwd)/zap:/zap/wrk/:rw \
            --network zap \
            -t \
            softwaresecurityproject/zap-stable \
            zap-baseline.py \
            -t ${{ env.FRONTEND_URL }} \
            -r report_web.html \
            -a \
            -j
      - name: test
        if: ${{ always() }}
        run: | 
          ls -l
          find .
      - name: Upload scan report
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # ratchet:actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: zap_report_web.zip
          path: /zap/report_web.html
  trivy-scan-backend:
    runs-on: ubuntu-latest
    if: false
    needs: [build-backend]
    permissions:
      contents: write # to write sarif
      security-events: write # push sarif to github security
      id-token: write # for nais/login
    steps:
      - uses: actions/checkout@8410ad0602e1e429cee44a835ae9f77f654a6694 # ratchet:actions/checkout@v4
      - uses: nais/login@4ce7445c84f09114e481a1d2c164f563e9e2ba8e # ratchet:nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: security-champion-admin
      - name: Pull docker image
        run: docker pull ${{ needs.build-backend.outputs.image }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@d710430a6722f083d3b36b8339ff66b32f22ee55 # ratchet:aquasecurity/trivy-action@master
        with:
          image-ref: '${{ needs.build-backend.outputs.image }}'
          format: 'sarif'
          output: 'trivy.sarif'
          severity: 'HIGH,CRITICAL'
          limit-severities-for-sarif: true
          exit-code: 1
      - name: Upload results to GitHub Security
        uses: github/codeql-action/upload-sarif@e8893c57a1f3a2b659b6b55564fdfdbbd2982911 # ratchet:github/codeql-action/upload-sarif@v2
        if: ${{ always() }}
        with:
          sarif_file: 'trivy.sarif'
  trivy-scan-frontend:
    runs-on: ubuntu-latest
    if: false
    needs: [build-frontend]
    permissions:
      contents: write # to write sarif
      security-events: write # push sarif to github security
      id-token: write # for nais/login
    steps:
      - uses: actions/checkout@8410ad0602e1e429cee44a835ae9f77f654a6694 # ratchet:actions/checkout@v4
      - uses: nais/login@4ce7445c84f09114e481a1d2c164f563e9e2ba8e # ratchet:nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: security-champion-admin
      - name: Pull docker image
        run: docker pull ${{ needs.build-frontend.outputs.image }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@d710430a6722f083d3b36b8339ff66b32f22ee55 # ratchet:aquasecurity/trivy-action@master
        with:
          image-ref: '${{ needs.build-frontend.outputs.image }}'
          format: 'sarif'
          output: 'trivy.sarif'
          severity: 'HIGH,CRITICAL'
          limit-severities-for-sarif: true
          exit-code: 1
      - name: Upload results to GitHub Security
        uses: github/codeql-action/upload-sarif@e8893c57a1f3a2b659b6b55564fdfdbbd2982911 # ratchet:github/codeql-action/upload-sarif@v2
        if: ${{ always() }}
        with:
          sarif_file: 'trivy.sarif'
